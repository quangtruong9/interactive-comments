{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/comment/comment.component.ts","./src/app/comment/comment.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\nimport * as data from '../../data.json';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'interactive-comments';\n  comments: any;\n  commentWidth;\n  commentBoxWidth;\n  userAvatar;\n  username;\n  replyBoxWidth;\n  newId;\n\n  ngOnInit(){\n    this.comments = data[\"comments\"]\n    this.commentWidth = screen.width > 630 ? 630 : 340;\n    this.username = data.currentUser.username;\n    this.commentBoxWidth = this.commentWidth + 'px';\n    this.userAvatar = \"assets\" + data[\"currentUser\"][\"image\"][\"png\"].substring(1);\n    \n    let temp = this.commentWidth - 200;\n    this.replyBoxWidth = temp + 'px';\n\n    let count = function(value){\n      let res = 0;\n      if (value.length > 0){\n        res = value.length;\n        for (let comment of value)\n          res += count(comment.replies);\n      }\n      return res;\n    }\n\n    this.newId = count(this.comments);\n  }\n\n  sendReply(){\n    let reply = document.getElementById(\"new-comment\") as HTMLInputElement;\n    let request = {\n      \"id\": this.newId * 6,\n      \"content\": reply.value,\n      \"createdAt\": \"2 weeks ago\",\n      \"score\": 0,\n      \"user\": {\n        \"image\": {\n          \"png\": data.currentUser.image.png\n        },\n        \"username\": data.currentUser.username\n      },\n      \"replies\": []\n    }\n\n    this.comments.push(request);\n    reply.value = \"\";\n\n  }\n}\n","<app-comment *ngFor=\"let comment of comments\" [comment]=\"comment\" [width]=\"commentWidth\"></app-comment>  \n\n<div class=\"comment-box\" [style.width]=\"commentBoxWidth\">\n    <div class=\"account-avatar\">\n        <img src={{userAvatar}}>\n    </div>\n    <div class=\"reply-content\">\n        <textarea id=\"new-comment\" class=\"reply-input\" [style.width]=\"replyBoxWidth\"> </textarea>\n    </div>\n    <div class=\"reply-send\" (click)=\"sendReply()\">\n    <p><strong>REPLY</strong></p>\n    </div>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { CommentComponent } from './comment/comment.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CommentComponent\n  ],\n  imports: [\n    BrowserModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Element } from '@angular/compiler';\nimport { Component, Input, OnInit } from '@angular/core';\nimport * as data from '../../../data.json';\n@Component({\n  selector: 'app-comment',\n  templateUrl: './comment.component.html',\n  styleUrls: ['./comment.component.css']\n})\nexport class CommentComponent implements OnInit {\n  @Input() comment;\n  @Input() width;\n  widthPx;\n  avatarUrl;\n  isReply = false;\n  isUser = false;\n  reducePixel;\n  accountAvatarUrl;\n  replyBoxWidth;\n  constructor() { }\n\n  ngOnInit(): void {\n    this.widthPx = this.width + 'px'; \n    this.avatarUrl = \"assets/\" + this.comment[\"user\"][\"image\"][\"png\"].substring(2);\n\n    if (this.comment[\"user\"][\"username\"] == 'juliusomo')\n      this.isUser = true;\n    \n    this.reducePixel = screen.width > 630 ? 50 : 20;\n    let temp = this.width - 200;\n    this.replyBoxWidth = temp + 'px';\n  }\n\n  reply(){\n    this.isReply = true;\n    this.accountAvatarUrl = \"assets/\" + data[\"currentUser\"][\"image\"][\"png\"].substring(2);\n  }\n\n  sendReply(value){\n    let reply = document.getElementById(value) as HTMLInputElement;\n\n    let request = {\n      \"id\": value * 6,\n      \"content\": reply.value,\n      \"createdAt\": \"2 weeks ago\",\n      \"score\": 0,\n      \"user\": {\n        \"image\": {\n          \"png\": data.currentUser.image.png\n        },\n        \"username\": data.currentUser.username\n      },\n      \"replies\": []\n    }\n    this.comment.replies.push(request);\n    \n    reply.innerHTML = \"\";\n    this.isReply = false;\n\n  }\n\n  upVote(){\n    this.comment.score += 1;\n  }\n\n  downVote(){\n    this.comment.score -= 1;\n\n  }\n\n  createRequest(){\n    let info = {\n      \"currentUser\": {\n        \"image\": {\n          \"png\": data.currentUser.image.png,\n        },\n        \"username\": data.currentUser.username\n\n      }\n    }\n  }\n}\n","<div class=\"comment\" [style.width]=\"widthPx\">\n  <div class=\"button-group\">\n    <div class=\"vote\">\n      <div class=\"upvote\" (click)=\"upVote()\">\n        <img src=\"assets/images/icon-plus.svg\">\n      </div>\n      <div class=\"vote-content\" >\n        <p><strong>{{comment[\"score\"]}}</strong></p>\n      </div>\n      <div class=\"downvote\" (click)=\"downVote()\">\n        <img src=\"assets/images/icon-minus.svg\">\n      </div>\n    </div>\n    <div class=\"button-small\">\n      <div class=\"delete\" *ngIf=\"isUser\">\n        <img  src=\"assets/images/icon-delete.svg\">\n        <p style=\"display: inline;\"><strong>Delete</strong></p>\n      </div>\n\n      <div class=\"edit\"  *ngIf=\"isUser\">\n        <img  src=\"assets/images/icon-edit.svg\">\n        <p style=\"display: inline;\"><strong>Edit</strong></p>\n      </div>\n      <div class=\"reply\" (click)=\"reply()\" *ngIf=\"!isUser\">\n        <img  src=\"assets/images/icon-reply.svg\">\n        <p style=\"display: inline;\"><strong>Reply</strong></p>\n      </div>\n\n    </div>\n  </div>\n\n\n    <div class=\"content\">\n      <div class=\"comment-header\">\n        <div class=\"user-avatar\">\n          <img style=\"width: 30px;\" src={{avatarUrl}}>\n        </div>\n        <div class=\"user-name\">\n          <p><strong>{{comment[\"user\"][\"username\"]}}</strong></p>\n        </div>\n        <div class=\"user-certificate\" *ngIf=\"isUser\">\n          <p class=\"user-certificate-text\"><strong>you</strong></p>\n        </div>\n        <div class=\"comment-time\">\n          <p>{{comment[\"createdAt\"]}}</p>\n        </div>\n        <div class=\"delete button-big\" *ngIf=\"isUser\">\n          <img  src=\"assets/images/icon-delete.svg\">\n          <p style=\"display: inline;\"><strong>Delete</strong></p>\n        </div>\n\n        <div class=\"edit button-big\"  *ngIf=\"isUser\">\n          <img  src=\"assets/images/icon-edit.svg\">\n          <p style=\"display: inline;\"><strong>Edit</strong></p>\n        </div>\n        <div class=\"reply button-big\" (click)=\"reply()\" *ngIf=\"!isUser\">\n          <img  src=\"assets/images/icon-reply.svg\">\n          <p style=\"display: inline;\"><strong>Reply</strong></p>\n        </div>\n      </div>\n\n      <div class=\"comment-content\">\n        <p>{{comment[\"content\"]}}</p>\n      </div>\n    </div>\n</div>\n\n<div class=\"comment comment-reply-box\" *ngIf=\"isReply\">\n  <div class=\"account-avatar\">\n    <img src={{accountAvatarUrl}}>\n  </div>\n  <div class=\"reply-content\">\n    <!-- <input type=\"text\" class=\"reply-input\"> -->\n    <textarea id={{comment.id}} class=\"reply-input\" [style.width]=\"replyBoxWidth\">@{{comment[\"user\"][\"username\"]}}. </textarea>\n  </div>\n  <div class=\"reply-send\" (click)=\"sendReply(comment.id)\">\n    <p><strong>REPLY</strong></p>\n  </div>\n</div>\n\n<div class=\"comment-reply\">\n    <div class=\"comment-line\"></div>\n    <div class=\"reply-box\">\n        <app-comment *ngFor=\"let rep of comment.replies\" [comment]=\"rep\" [width]=\"width - reducePixel\"></app-comment>\n    </div>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}